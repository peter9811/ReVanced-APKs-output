name: CI
on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: "0 16 * * *" # Run daily at 16:00 UTC

# Prevent multiple workflow runs executing at the same time
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check:
    permissions: write-all
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Add timeout to prevent hanging jobs
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if this is the first build or if config has changed
          if ! git checkout origin/update build.md 2>/dev/null; then
            echo "First time building or update branch doesn't exist yet"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if configuration has changed
          UPDATE_CFG=$(./build.sh config.toml --config-update || echo "ERROR")
          if [ "$UPDATE_CFG" = "ERROR" ]; then
            echo "Error checking config updates, proceeding with build to be safe"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          elif [ -n "$UPDATE_CFG" ]; then
            echo "Config changes detected: '$UPDATE_CFG'"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            echo "No config changes, skipping build"
            echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
          fi

      - name: Clear older runs
        if: always() # Run cleanup even if previous steps fail
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Keeping the latest 9 workflow runs and removing older ones"
          gh run list --workflow "${{ github.workflow }}" -L100 --json databaseId -q '.[9:] | .[].databaseId' |
          xargs -I{} gh api "repos/$GITHUB_REPOSITORY/actions/runs/{}" -X DELETE ||
          echo "No old runs to delete or cleanup failed"

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}

  build:
    permissions: write-all
    needs: check
    uses: ./.github/workflows/build.yml
    if: ${{ needs.check.outputs.SHOULD_BUILD == 1 }}
    secrets: inherit
